#ifndef __MGA_TYPES_H__
#define __MGA_TYPES_H__


/*** Included Header Files ***/
#include "../Core/CoreTypes.h"


typedef int32_t MetaRef_t;

typedef enum ObjType_t
{
	OBJTYPE_NULL = 0,
	OBJTYPE_MODEL = 1,
	OBJTYPE_ATOM = 2,
	OBJTYPE_REFERENCE = 3,
	OBJTYPE_CONNECTION = 4,
	OBJTYPE_SET = 5,
	OBJTYPE_FOLDER = 6,
	OBJTYPE_ASPECT,
	OBJTYPE_ROLE,
	OBJTYPE_ATTRIBUTE,
	OBJTYPE_PART
} ObjType_t;

typedef enum AttVal_t
{
	ATTVAL_NULL = 0,
	ATTVAL_STRING = 1,
	ATTVAL_INTEGER = 2,
	ATTVAL_DOUBLE = 3,
	ATTVAL_BOOLEAN = 4,
	ATTVAL_REFERENCE = 5,
	ATTVAL_ENUM,
	ATTVAL_DYNAMIC,
} AttVal_t;
/*
typedef enum ConstraintDepth_t
{
	CONSTRAINT_DEPTH_ZERO,
	CONSTRAINT_DEPTH_ONE,
	CONSTRAINT_DEPTH_ANY
} ConstraintDepth_t;

typedef enum Constraint_t
{
	CONSTRAINT_TYPE_EVENTBASED,
	CONSTRAINT_TYPE_ONDEMAND,
	CONSTRAINT_TYPE_FUNCTION
} Constraint_t;
*/
typedef enum GlobalEvent_t {
	GLOBALEVENT_OPEN_PROJECT,								// include create
	GLOBALEVENT_CLOSE_PROJECT,
	GLOBALEVENT_SAVE_PROJECT,
    GLOBALEVENT_NEW_TERRITORY,
    GLOBALEVENT_DESTROY_TERRITORY,							// any territory has been destroyed (includes destroy by release)
    GLOBALEVENT_COMMIT_TRANSACTION,
    GLOBALEVENT_ABORT_TRANSACTION,
    GLOBALEVENT_UNDO,
    GLOBALEVENT_REDO,
	GLOBALEVENT_PROJECT_PROPERTIES,							// project properties Name, author, etc changed
	GLOBALEVENT_NOTIFICATION_READY,
	// application specific (GUI) events
	APPEVENT_XML_IMPORT_BEGIN = 0xFF,
	APPEVENT_XML_IMPORT_END,
	APPEVENT_XML_IMPORT_FCOS_BEGIN,
	APPEVENT_XML_IMPORT_FCOS_END,
	APPEVENT_XML_IMPORT_SPECIAL_BEGIN,
	APPEVENT_XML_IMPORT_SPECIAL_END,
	APPEVENT_LIB_ATTACH_BEGIN,
	APPEVENT_LIB_ATTACH_END
} GlobalEvent_t;


typedef enum ComponentType_t
{
	COMPONENTTYPE_NONE					= 0x0000,
	COMPONENTTYPE_INTERPRETER			= 0x0001,
	COMPONENTTYPE_ADDON					= 0x0002,
	COMPONENTTYPE_PLUGIN				= 0x0004,
	COMPONENTTYPE_ALL					= 0x0007,
	COMPONENTTYPE_EVENT_BASED			= COMPONENTTYPE_ADDON,
	COMPONENTTYPE_PARADIGM_INDEPENDENT	= 0x0008,
	COMPONENTTYPE_EXECENGINE			= 0x0010,
	COMPONENTTYPE_SCRIPT				= 0x0020,
	COMPONENTTYPE_SYSREGREF				= 0x0080,    // used in user registry to reference components in system registry
} ComponentType_t;


// MGAERRORTABLE BEGIN			take care when editing
typedef enum MgaErrors {
	E_MGA_NOT_IMPLEMENTED			= 0x87650000,
	E_MGA_NOT_SUPPORTED				= 0x87650001,
	E_MGA_MODULE_INCOMPATIBILITY	= 0x87650010,
	E_MGA_PARADIGM_NOTREG			= 0x87650011,
	E_MGA_PARADIGM_INVALID			= 0x87650012,
	E_MGA_COMPONENT_ERROR			= 0x87650013,
	E_MGA_DATA_INCONSISTENCY		= 0x87650021,
	E_MGA_META_INCOMPATIBILITY		= 0x87650022,
	E_MGA_PROJECT_OPEN				= 0x87650031,
	E_MGA_PROJECT_NOT_OPEN			= 0x87650032,
	E_MGA_READ_ONLY_ACCESS			= 0x87650033,
	E_MGA_NOT_IN_TERRITORY			= 0x87650034,
	E_MGA_NOT_IN_TRANSACTION		= 0x87650035,
	E_MGA_ALREADY_IN_TRANSACTION	= 0x87650036,
	E_MGA_MUST_ABORT				= 0x87650037,
	E_MGA_TARGET_DESTROYED			= 0x87650038,
	E_MGA_FOREIGN_PROJECT			= 0x87650041,
	E_MGA_FOREIGN_OBJECT			= 0x87650042,
	E_MGA_OBJECT_DELETED			= 0x87650051,
	E_MGA_OBJECT_ZOMBIE				= 0x87650052,
	E_MGA_ZOMBIE_NOPROJECT			= 0x87650053,
	E_MGA_ZOMBIE_CLOSED_PROJECT		= 0x87650054,
	E_MGA_INVALID_ARG				= 0x87650060,
	E_MGA_ARG_RANGE					= 0x87650061,
	E_MGA_INPTR_NULL				= 0x87650062,
	E_MGA_OUTPTR_NONEMPTY			= 0x87650063,
	E_MGA_OUTPTR_NULL				= 0x87650064,
	E_MGA_NAME_NOT_FOUND			= 0x87650070,
	E_MGA_NAME_DUPLICATE			= 0x87650071,
	E_MGA_META_VIOLATION			= 0x87650072,
	E_MGA_NOT_CHANGEABLE			= 0x87650073,
	E_MGA_OP_REFUSED				= 0x87650074,
	E_MGA_LIBOBJECT					= 0x87650075,
	E_META_INVALIDATTR				= 0x87650080,
	E_META_INVALIDASPECT			= 0x87650081,
	E_MGA_ACCESS_TYPE				= 0x87650082,
	E_MGA_BAD_ENUMVALUE				= 0x87650083,
	E_MGA_REFPORTS_USED				= 0x87650131,
	E_MGA_VIRTUAL_NODE				= 0x87650136,
	E_MGA_BAD_POSITIONVALUE			= 0x87650137,
	E_MGA_ROOTFCO					= 0x87650138,
	E_MGA_NOT_ROOTOBJECT			= 0x87650138,
	E_MGA_BAD_COLLENGTH				= 0x87650140,
	E_MGA_INVALID_ROLE				= 0x87650142,
	E_MGA_BAD_ID					= 0x87650143,
	E_MGA_NOT_DERIVABLE				= 0x87650144,
	E_MGA_OBJECT_NOT_MEMBER			= 0x87650145,
	E_MGA_NOT_CONNECTIBLE			= 0x87650146,
	E_MGA_NO_ROLE					= 0x87650147,
	E_MGA_CONNROLE_USED				= 0x87650148,
	E_MGA_NOT_DERIVED				= 0x87650149,
	E_MGA_NOT_INSTANCE				= 0x87650150,
	E_MGA_INSTANCE					= 0x87650151,
	E_MGA_REFERENCE_EXPECTED		= 0x87650152,
	E_MGA_FILTERFORMAT				= 0x87650153,
	E_MGA_GEN_OUT_OF_SPACE			= 0x87650154,
	E_MGA_INVALID_TARGET			= 0x87650155,
	E_MGA_LONG_DERIVCHAIN			= 0x87650156,
	E_MGA_LIB_DIFF					= 0x87650157,
	E_MGA_BAD_MASKVALUE				= 0x87650170,
	E_MGA_CONSTRAINT_VIOLATION		= 0x87657FFF,
	E_MGA_ERRCODE_ERROR				= 0x87658000
} MgaErrors;


const std::string GetMgaErrorInfo(const Result_t &result);


#endif // __MGA_TYPES_H__

