#summary List of proposed changes to the MGA data format.
#labels Phase-Design

= Introduction =

The MGA file format has not changed in quite a while.  This has been good, but it is time for a change.  Listed below are the proposed changes at both the BinFile level and as will be incurred by changing MgaGeneric and MetaGeneric.


= Proposed Changes =

Add your content here.  Format your content with:
  * Add index of all objects to front of file (GUID, file start position, object size in bytes)
  * Add back-pointer collection data
  * Replace all object identification schemes with GUID
  * Remove all lock attributes


= MGA Binary File Format - Version 3 =

Bytes (all ordered little endian):

0-3: Size of GUID (always = 16)

4-19: GUID (long, short, short, 8xChar)
		{ 68, 116, 143, 2, 81, 46, 211, 17, 179, 109, 0, 98, 8, 45, 248, 116)


*** New Addition ***
20-21: DTID_INDEX (2B, if present then index is present)
22-26: Size of Index (4 bytes ObjID_t)

== Index Entry ==
  * MetaID (2 bytes)
  * ObjID(4 bytes)
  * File Position (8 bytes)
*** End of Addition ***


=== Start of Objects ===

0-1: MetaID (2 bytes)<br>
2-5: ObjID (4 bytes)<br>

=== Start of Attributes ===

0-1: ValueType (2 bytes)<br>
2-3: AttrID (2 bytes)<br>

-- Read Attribute Value
  * Long: 4 bytes
  * Real: 4 bytes
  * String: 4 bytes for length + length number of bytes
  * Binary: 4 bytes for length + length number of bytes
  * Lock: 0 bytes
  * Collection: 0 bytes (***New Addition: 4 bytes size, + MetaID,ObjID (6B) per item in collection ***)
  * Pointer: 2 bytes (MetaID) + 4 bytes (ObjID) - only MetaID if MetaID == METAID_NONE

=== End of Attributes when ValueType equals VALUETYPE_NONE ===

=== End of Objects when MetaID equals METAID_NONE ===